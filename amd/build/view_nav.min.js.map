{"version":3,"sources":["../src/view_nav.js"],"names":["define","$","CustomEvents","View","Ajax","Notification","ViewCourses","SELECTORS","COURSE_ACTIVITIES_DAY_FILTER","COURSE_ACTIVITIES_DAY_FILTER_OPTION","COURSE_ACTIVITIES_VIEW_SELECTOR","DATA_DAYS_OFFSET","DATA_DAYS_LIMIT","COURSE_ACTIVITIES_COURSES_VIEW","updateUserPreferences","type","value","call","methodname","args","preferences","fail","exception","registerCourseActivitiesDaySelector","root","courseActivitiesViewRoot","courseActivitiesDaySelectorContainer","find","events","activate","on","e","data","filtername","currentTarget","option","target","closest","attr","daysOffset","daysLimit","course","elementsWithDaysOffset","removeAttr","reset","originalEvent","preventDefault","registerViewSelector","viewSelector","shown","removeClass","init","coursesViewRoot"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the course activities view navigation for the course activities block.\n *\n * @package    block_course_activities\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n[\n    'jquery',\n    'core/custom_interaction_events',\n    'block_course_activities/view',\n    'core/ajax',\n    'core/notification',\n    'block_course_activities/view_courses'\n],\nfunction(\n    $,\n    CustomEvents,\n    View,\n    Ajax,\n    Notification,\n    ViewCourses\n) {\n\n    var SELECTORS = {\n        COURSE_ACTIVITIES_DAY_FILTER: '[data-region=\"course-filter\"]',\n        COURSE_ACTIVITIES_DAY_FILTER_OPTION: '[data-from]',\n        COURSE_ACTIVITIES_VIEW_SELECTOR: '[data-region=\"view-selector\"]',\n        DATA_DAYS_OFFSET: '[data-days-offset]',\n        DATA_DAYS_LIMIT: '[data-days-limit]',\n        COURSE_ACTIVITIES_COURSES_VIEW: '[data-region=\"view-courses\"]',\n    };\n\n    /**\n     * Generic handler to persist user preferences\n     *\n     * @param {string} type The name of the attribute you're updating\n     * @param {string} value The value of the attribute you're updating\n     */\n    var updateUserPreferences = function(type, value) {\n        var request = {\n            methodname: 'core_user_update_user_preferences',\n            args: {\n                preferences: [\n                    {\n                        type: type,\n                        value: value\n                    }\n                ]\n            }\n        };\n\n        Ajax.call([request])[0]\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Event listener for the day selector (\"Next 7 days\", \"Next 30 days\", etc).\n     *\n     * @param {object} root The root element for the course activities block\n     * @param {object} courseActivitiesViewRoot The root element for the course activities view\n     */\n    var registerCourseActivitiesDaySelector = function(root, courseActivitiesViewRoot) {\n\n        var courseActivitiesDaySelectorContainer = root.find(SELECTORS.COURSE_ACTIVITIES_DAY_FILTER);\n\n        CustomEvents.define(courseActivitiesDaySelectorContainer, [CustomEvents.events.activate]);\n        courseActivitiesDaySelectorContainer.on(\n            CustomEvents.events.activate,\n            SELECTORS.COURSE_ACTIVITIES_DAY_FILTER_OPTION,\n            function(e, data) {\n                // Update the user preference\n                var filtername = $(e.currentTarget).data('filtername');\n                var type = 'block_course_activities_user_course_preference';\n                updateUserPreferences(type, filtername);\n\n                var option = $(e.target).closest(SELECTORS.COURSE_ACTIVITIES_DAY_FILTER_OPTION);\n\n                if (option.attr('aria-current') == 'true') {\n                    // If it's already active then we don't need to do anything.\n                    return;\n                }\n\n                var daysOffset = option.attr('data-from');\n                var daysLimit = option.attr('data-to');\n                var course = option.attr('data-course');\n                var elementsWithDaysOffset = root.find(SELECTORS.DATA_DAYS_OFFSET);\n\n                elementsWithDaysOffset.attr('data-days-offset', daysOffset);\n                elementsWithDaysOffset.attr('data-course-id', course);\n                if (daysLimit != undefined) {\n                    elementsWithDaysOffset.attr('data-days-limit', daysLimit);\n                } else {\n                    elementsWithDaysOffset.removeAttr('data-days-limit');\n                }\n                // Reset the views to reinitialise the event lists now that we've\n                // updated the day limits.\n                View.reset(courseActivitiesViewRoot);\n\n                data.originalEvent.preventDefault();\n            }\n        );\n    };\n\n    /**\n     * Event listener for the \"sort\" button in the course activities navigation that allows for\n     * changing between the course activities dates and courses views.\n     *\n     * On a view change we tell the course activities view module that the view has been shown\n     * so that it can handle how to display the appropriate view.\n     *\n     * @param {object} root The root element for the course activities block\n     * @param {object} courseActivitiesViewRoot The root element for the course activities view\n     */\n    var registerViewSelector = function(root, courseActivitiesViewRoot) {\n        var viewSelector = root.find(SELECTORS.COURSE_ACTIVITIES_VIEW_SELECTOR);\n\n        // Listen for when the user changes tab so that we can show the first set of courses\n        // and load their events when they request the sort by courses view for the first time.\n        viewSelector.on('shown shown.bs.tab', function(e) {\n            View.shown(courseActivitiesViewRoot);\n            $(e.target).removeClass('active');\n        });\n\n\n        // Event selector for user_sort\n        CustomEvents.define(viewSelector, [CustomEvents.events.activate]);\n        viewSelector.on(CustomEvents.events.activate, \"[data-toggle='tab']\", function(e) {\n            var filtername = $(e.currentTarget).data('filtername');\n            var type = 'block_course_activities_user_sort_preference';\n            updateUserPreferences(type, filtername);\n        });\n    };\n\n    /**\n     * Initialise the course activities view navigation by adding event listeners to\n     * the navigation elements.\n     *\n     * @param {object} root The root element for the course activities block\n     * @param {object} courseActivitiesViewRoot The root element for the course activities view\n     */\n    var init = function(root, courseActivitiesViewRoot) {\n        root = $(root);\n        registerCourseActivitiesDaySelector(root, courseActivitiesViewRoot);\n        registerViewSelector(root, courseActivitiesViewRoot);\n    };\n\n    /**\n     * Reset the course activities dates and courses views to their original\n     * state on first page load.\n     *\n     * This is called when configuration has changed for the event lists\n     * to cause them to reload their data.\n     *\n     * @param {object} root The root element for the course activities view.\n     */\n    var reset = function(root) {\n        var coursesViewRoot = root.find(SELECTORS.COURSE_ACTIVITIES_COURSES_VIEW);\n        ViewCourses.reset(coursesViewRoot);\n    };\n\n    /**\n     * Tell the course activities dates or courses view that it has been displayed.\n     *\n     * This is called each time one of the views is displayed and is used to\n     * lazy load the data within it on first load.\n     *\n     * @param {object} root The root element for the course activities view.\n     */\n    var shown = function(root) {\n        var coursesViewRoot = root.find(SELECTORS.COURSE_ACTIVITIES_COURSES_VIEW);\n        ViewCourses.shown(coursesViewRoot);\n    };\n\n    return {\n        init: init,\n        reset:reset,\n        shown:shown,\n    };\n});\n"],"file":"view_nav.min.js"}