{"version":3,"sources":["../src/view_courses.js"],"names":["define","$","Notification","CustomEvents","Str","Templates","EventList","CourseRepository","EventsRepository","SELECTORS","COURSE_ACTIVITIES_DAY_FILTER","COURSE_ACTIVITIES_DAY_FILTER_OPTION","NO_COURSES_EMPTY_MESSAGE","COURSES_LIST","COURSE_ITEMS_LOADING_PLACEHOLDER","COURSE_EVENTS_CONTAINER","COURSE_NAME","LOADING_ICON","TEMPLATES","COURSE_ITEMS","COURSE_EVENT_LIMIT","SECONDS_IN_DAY","hideLoadingPlaceholder","root","find","addClass","hideMoreCoursesButton","MORE_COURSES_BUTTON_CONTAINER","showMoreCoursesButton","removeClass","showNoCoursesEmptyMessage","renderCourseItemsHTML","html","container","appendNodeContents","hasLoadedCourses","length","getOffset","parseInt","attr","setOffset","offset","getLimit","getDaysOffset","getDaysLimit","daysLimit","getCourseId","courseIdentify","getMidnight","getStartTime","midnight","daysOffset","getEndTime","getEventsForCourseIds","courseIds","startTime","limit","endTime","args","courseids","starttime","endtime","queryByCourses","getEventReloadTime","data","setEventReloadTime","time","hasReloadedEventsSince","loadEventsForCourses","courses","map","course","id","updateDisplayFromCourses","noEventsURL","courseA","forEach","render","hasdaysoffset","hasdayslimit","daysoffset","dayslimit","nodayslimit","urls","noevents","then","catch","loadMoreCourses","getEnrolledCoursesByTimelineClassification","result","startEventLoadingTime","Date","now","nextOffset","nextoffset","eventsPromise","renderPromise","when","eventsByCourse","courseId","events","courseEventsContainer","eventListRoot","rootSelector","courseGroups","groupedbycourse","filter","group","courseid","pageOnePreload","Deferred","resolve","promise","get_string","fullnamedisplay","string","init","exception","reloadCourseEvents","startReloadTime","courseEventsContainers","get","each","index","courseName","text","eventListContainer","pageDeferred","registerEventListeners","courseActivitiesDaySelectorContainer","activate","on","e","alert","originalEvent","preventDefault","stopPropagation","shown","hasClass","reset","removeAttr"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the course activities courses view for the course activities block.\n *\n * @package    block_course_activities\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n[\n    'jquery',\n    'core/notification',\n    'core/custom_interaction_events',\n    'core/str',\n    'core/templates',\n    'block_course_activities/event_list',\n    'core_course/repository',\n    'block_course_activities/calendar_events_repository'\n],\nfunction(\n    $,\n    Notification,\n    CustomEvents,\n    Str,\n    Templates,\n    EventList,\n    CourseRepository,\n    EventsRepository\n) {\n\n    var SELECTORS = {\n        COURSE_ACTIVITIES_DAY_FILTER: '[data-region=\"course-filter\"]',\n        COURSE_ACTIVITIES_DAY_FILTER_OPTION: '[data-from]',\n        NO_COURSES_EMPTY_MESSAGE: '[data-region=\"no-courses-empty-message\"]',\n        COURSES_LIST: '[data-region=\"courses-list\"]',\n        COURSE_ITEMS_LOADING_PLACEHOLDER: '[data-region=\"course-items-loading-placeholder\"]',\n        COURSE_EVENTS_CONTAINER: '[data-region=\"course-events-container\"]',\n        COURSE_NAME: '[data-region=\"course-name\"]',\n        LOADING_ICON: '.loading-icon'\n    };\n\n    var TEMPLATES = {\n        COURSE_ITEMS: 'block_course_activities/course-items',\n        LOADING_ICON: 'core/loading'\n    };\n\n    var COURSE_CLASSIFICATION = 'inprogress';\n    var COURSE_SORT = 'fullname asc';\n    var COURSE_EVENT_LIMIT = 5;\n    var COURSE_LIMIT = 2;\n    var SECONDS_IN_DAY = 60 * 60 * 24;\n\n    /**\n     * Hide the loading placeholder elements.\n     *\n     * @param {object} root The rool element.\n     */\n    var hideLoadingPlaceholder = function(root) {\n        root.find(SELECTORS.COURSE_ITEMS_LOADING_PLACEHOLDER).addClass('hidden');\n    };\n\n    /**\n     * Hide the \"more courses\" button.\n     *\n     * @param {object} root The rool element.\n     */\n    var hideMoreCoursesButton = function(root) {\n        root.find(SELECTORS.MORE_COURSES_BUTTON_CONTAINER).addClass('hidden');\n    };\n\n    /**\n     * Show the \"more courses\" button.\n     *\n     * @param {object} root The rool element.\n     */\n    var showMoreCoursesButton = function(root) {\n        root.find(SELECTORS.MORE_COURSES_BUTTON_CONTAINER).removeClass('hidden');\n    };\n\n    /**\n     * Disable the \"more courses\" button and show the loading spinner.\n     *\n     * @param {object} root The rool element.\n     */\n    // var enableMoreCoursesButtonLoading = function(root) {\n    //     var button = root.find(SELECTORS.MORE_COURSES_BUTTON);\n    //     button.prop('disabled', true);\n    //     Templates.render(TEMPLATES.LOADING_ICON, {})\n    //         .then(function(html) {\n    //             button.append(html);\n    //             return html;\n    //         })\n    //         .catch(function() {\n    //             // It's not important if this false so just do so silently.\n    //             return false;\n    //         });\n    // };\n\n    /**\n     * Enable the \"more courses\" button and remove the loading spinner.\n     *\n     * @param {object} root The rool element.\n     */\n    // var disableMoreCoursesButtonLoading = function(root) {\n    //     var button = root.find(SELECTORS.MORE_COURSES_BUTTON);\n    //     button.prop('disabled', false);\n    //     button.find(SELECTORS.LOADING_ICON).remove();\n    // };\n\n    /**\n     * Display the message for when there are no courses available.\n     *\n     * @param {object} root The rool element.\n     */\n    var showNoCoursesEmptyMessage = function(root) {\n        root.find(SELECTORS.NO_COURSES_EMPTY_MESSAGE).removeClass('hidden');\n    };\n\n    /**\n     * Render the course items HTML to the page.\n     *\n     * @param {object} root The rool element.\n     * @param {string} html The course items HTML to render.\n     */\n    var renderCourseItemsHTML = function(root, html) {\n        var container = root.find(SELECTORS.COURSES_LIST);\n        Templates.appendNodeContents(container, html, '');\n    };\n\n    /**\n     * Check if any courses have been loaded.\n     *\n     * @param {object} root The rool element.\n     * @return {bool}\n     */\n    var hasLoadedCourses = function(root) {\n        return root.find(SELECTORS.COURSE_EVENTS_CONTAINER).length > 0;\n    };\n\n    /**\n     * Return the offset value for fetching courses.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getOffset = function(root) {\n        return parseInt(root.attr('data-offset'), 10);\n    };\n\n    /**\n     * Set the offset value for fetching courses.\n     *\n     * @param {object} root The rool element.\n     * @param {Number} offset Offset value.\n     */\n    var setOffset = function(root, offset) {\n        root.attr('data-offset', offset);\n    };\n\n    /**\n     * Return the limit value for fetching courses.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getLimit = function(root) {\n        return parseInt(root.attr('data-limit'), 10);\n    };\n\n    /**\n     * Return the days offset value for fetching events.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getDaysOffset = function(root) {\n        return parseInt(root.attr('data-days-offset'), 10);\n    };\n\n    /**\n     * Return the days limit value for fetching events. The days\n     * limit is optional so undefined will be returned if it isn't\n     * set.\n     *\n     * @param {object} root The rool element.\n     * @return {int|undefined}\n     */\n    var getDaysLimit = function(root) {\n        var daysLimit = root.attr('data-days-limit');\n        return daysLimit != undefined ? parseInt(daysLimit, 10) : undefined;\n    };\n\n    var getCourseId = function(root) {\n        var courseIdentify = root.attr('data-course');\n        return courseIdentify != undefined ? courseIdentify: undefined;\n    };\n\n    /**\n     * Return the timestamp for the user's midnight.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getMidnight = function(root) {\n        return parseInt(root.attr('data-midnight'), 10);\n    };\n\n    /**\n     * Return the start time for fetching events. This is calculated\n     * based on the user's midnight value so that timezones are\n     * preserved.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getStartTime = function(root) {\n        var midnight = getMidnight(root);\n        var daysOffset = getDaysOffset(root);\n        return midnight + (daysOffset * SECONDS_IN_DAY);\n    };\n\n    /**\n     * Return the end time for fetching events. This is calculated\n     * based on the user's midnight value so that timezones are\n     * preserved.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getEndTime = function(root) {\n        var midnight = getMidnight(root);\n        var daysLimit = getDaysLimit(root);\n        return daysLimit != undefined ? midnight + (daysLimit * SECONDS_IN_DAY) : false;\n    };\n\n    /**\n     * Get a list of events for the given course ids. Returns a promise that will\n     * be resolved with the events.\n     *\n     * @param {array} courseIds The list of course ids to fetch events for.\n     * @param {Number} startTime Timestamp to fetch events from.\n     * @param {Number} limit Limit to the number of events (this applies per course, not total)\n     * @param {Number} endTime Timestamp to fetch events to.\n     * @return {object} jQuery promise.\n     */\n    var getEventsForCourseIds = function(courseIds, startTime, limit, endTime) {\n        var args = {\n            courseids: courseIds,\n            starttime: startTime,\n            limit: limit\n        };\n\n        if (endTime) {\n            args.endtime = endTime;\n        }\n\n        return EventsRepository.queryByCourses(args);\n    };\n\n    /**\n     * Get the last time the events were reloaded.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getEventReloadTime = function(root) {\n        return root.data('last-event-load-time');\n    };\n\n    /**\n     * Set the last time the events were reloaded.\n     *\n     * @param {object} root The rool element.\n     * @param {Number} time Timestamp in milliseconds.\n     */\n    var setEventReloadTime = function(root, time) {\n        root.data('last-event-load-time', time);\n    };\n\n    /**\n     * Check if events have begun reloading since the given\n     * time.\n     *\n     * @param {object} root The rool element.\n     * @param {Number} time Timestamp in milliseconds.\n     * @return {bool}\n     */\n    var hasReloadedEventsSince = function(root, time) {\n        return getEventReloadTime(root) > time;\n    };\n\n    /**\n     * Send a request to the server to load the events for the courses.\n     *\n     * @param {array} courses List of course objects.\n     * @param {Number} startTime Timestamp to load events after.\n     * @param {int|undefined} endTime Timestamp to load events up until.\n     * @return {object} jQuery promise resolved with the events.\n     */\n    var loadEventsForCourses = function(courses, startTime, endTime) {\n        var courseIds = courses.map(function(course) {\n            return course.id;\n        });\n\n        return getEventsForCourseIds(courseIds, startTime, COURSE_EVENT_LIMIT + 1, endTime);\n    };\n\n    /**\n     * Render the courses in the DOM once the server has returned the courses.\n     *\n     * @param {array} courses List of course objects.\n     * @param {object} root The root element\n     * @param {Number} midnight The midnight timestamp in the user's timezone.\n     * @param {Number} daysOffset Number of days from today to offset the events.\n     * @param {Number} daysLimit Number of days from today to limit the events to.\n     * @param {string} noEventsURL URL for the image to display for no events.\n     * @return {object} jQuery promise resolved after rendering is complete.\n     * @param {string} courseIdentify identifier of course.\n     */\n    var updateDisplayFromCourses = function(courses, root, midnight, daysOffset, daysLimit, noEventsURL, courseIdentify) {\n        let courseA = 'undefined';\n        courses.forEach(function(course) {\n            if('course'+course.id == courseIdentify){\n                courseA = course;\n            }\n        });\n        return Templates.render(TEMPLATES.COURSE_ITEMS, {\n            courses: courseA,\n            midnight: midnight,\n            hasdaysoffset: true,\n            hasdayslimit: daysLimit != undefined,\n            daysoffset: daysOffset,\n            dayslimit: daysLimit,\n            nodayslimit: daysLimit == undefined,\n            urls: {\n                noevents: noEventsURL\n            }\n        }).then(function(html) {\n            hideLoadingPlaceholder(root);\n\n            if (html) {\n                // Template rendering is complete and we have the HTML so we can\n                // add it to the DOM.\n                renderCourseItemsHTML(root, html);\n            } else {\n                if (!hasLoadedCourses(root)) {\n                    // There were no courses to render so show the empty placeholder\n                    // message for the user to tell them.\n                    showNoCoursesEmptyMessage(root);\n                }\n            }\n\n            return html;\n        })\n        .then(function(html) {\n            if (courses.length < COURSE_LIMIT) {\n                // We know there aren't any more courses because we got back less\n                // than we asked for so hide the button to request more.\n                hideMoreCoursesButton(root);\n            } else {\n                // Make sure the button is visible if there are more courses to load.\n                showMoreCoursesButton(root);\n            }\n\n            return html;\n        })\n        .catch(function() {\n            hideLoadingPlaceholder(root);\n        });\n    };\n\n    /**\n     * Find all of the visible course blocks and initialise the event\n     * list module to being loading the events for the course block.\n     *\n     * @param {object} root The root element for the course activities courses view.\n     * @return {object} jQuery promise resolved with courses and events.\n     */\n    var loadMoreCourses = function(root) {\n        var offset = getOffset(root);\n        var limit = getLimit(root);\n\n        // Start loading the next set of courses.\n        return CourseRepository.getEnrolledCoursesByTimelineClassification(\n            COURSE_CLASSIFICATION,\n            limit,\n            offset,\n            COURSE_SORT\n        ).then(function(result) {\n            var startEventLoadingTime = Date.now();\n            var courses = result.courses;\n            var nextOffset = result.nextoffset;\n            var daysOffset = getDaysOffset(root);\n            var daysLimit = getDaysLimit(root);\n            var midnight = getMidnight(root);\n            var startTime = getStartTime(root);\n            var endTime = getEndTime(root);\n            var courseIdentify = getCourseId(root);\n            var noEventsURL = root.attr('data-no-events-url');\n            // Record the next offset if we want to request more courses.\n            setOffset(root, nextOffset);\n            // Load the events for these courses.\n            var eventsPromise = loadEventsForCourses(courses, startTime, endTime);\n            // Render the courses in the DOM.\n            var renderPromise = updateDisplayFromCourses(courses, root, midnight,\n                daysOffset, daysLimit, noEventsURL, courseIdentify);\n\n            return $.when(eventsPromise, renderPromise)\n                .then(function(eventsByCourse) {\n                    if (hasReloadedEventsSince(root, startEventLoadingTime)) {\n                        // All of the events are being reloaded so ignore our results.\n                        return eventsByCourse;\n                    }\n\n                    // When we've got all of the courses and events we can render the events in the\n                    // correct course event list.\n                    courses.forEach(function(course) {\n                        var courseId = course.id;\n                        var events = [];\n                        var containerSelector = '[data-region=\"course-events-container\"][data-course-id=\"' + courseId + '\"]';\n                        var courseEventsContainer = root.find(containerSelector);\n                        var eventListRoot = courseEventsContainer.find(EventList.rootSelector);\n                        var courseGroups = eventsByCourse.groupedbycourse.filter(function(group) {\n                            return group.courseid == courseId;\n                        });\n\n                        if (courseGroups.length) {\n                            // Get the events for this course.\n                            events = courseGroups[0].events;\n                        }\n\n                        // Create a preloaded page to pass to the event list because we've already\n                        // loaded the first page of events.\n                        var pageOnePreload = $.Deferred().resolve({events: events}).promise();\n                        // Initialise the event list pagination area for this course.\n                        Str.get_string('ariaeventlistpaginationnavcourses', 'block_course_activities', course.fullnamedisplay)\n                            .then(function(string) {\n                                EventList.init(eventListRoot, COURSE_EVENT_LIMIT, {'1': pageOnePreload}, string);\n                                return string;\n                            })\n                            .catch(function() {\n                                // An error is ok, just render with the default string.\n                                EventList.init(eventListRoot, COURSE_EVENT_LIMIT, {'1': pageOnePreload});\n                            });\n                    });\n\n                    return eventsByCourse;\n                });\n        }).catch(Notification.exception);\n    };\n\n    /**\n     * Reload the events for all of the visible courses. These events will be loaded\n     * in a single request to the server.\n     *\n     * @param {object} root The root element.\n     * @return {object} jQuery promise resolved with courses and events.\n     */\n    var reloadCourseEvents = function(root) {\n        var startReloadTime = Date.now();\n        var startTime = getStartTime(root);\n        var endTime = getEndTime(root);\n        var courseEventsContainers = root.find(SELECTORS.COURSE_EVENTS_CONTAINER);\n        var courseIds = courseEventsContainers.map(function() {\n            return $(this).attr('data-course-id');\n        }).get();\n\n        // Record when we started our request.\n        setEventReloadTime(root, startReloadTime);\n\n        // Load all of the events for the given courses.\n        return getEventsForCourseIds(courseIds, startTime, COURSE_EVENT_LIMIT + 1, endTime)\n            .then(function(eventsByCourse) {\n                if (hasReloadedEventsSince(root, startReloadTime)) {\n                    // A new reload has begun so ignore our results.\n                    return eventsByCourse;\n                }\n\n                courseEventsContainers.each(function(index, container) {\n                    container = $(container);\n                    var courseId = container.attr('data-course-id');\n                    var courseName = container.find(SELECTORS.COURSE_NAME).text();\n                    var eventListContainer = container.find(EventList.rootSelector);\n                    var pageDeferred = $.Deferred();\n                    var events = [];\n                    var courseGroups = eventsByCourse.groupedbycourse.filter(function(group) {\n                        return group.courseid == courseId;\n                    });\n\n                    if (courseGroups.length) {\n                        // Get the events just for this course.\n                        events = courseGroups[0].events;\n                    }\n\n                    pageDeferred.resolve({events: events});\n\n                    // Re-initialise the events list with the preloaded events we just got from\n                    // the server.\n                    Str.get_string('ariaeventlistpaginationnavcourses', 'block_course_activities', courseName)\n                        .then(function(string) {\n                            EventList.init(eventListContainer, COURSE_EVENT_LIMIT, {'1': pageDeferred.promise()}, string);\n                            return string;\n                        })\n                        .catch(function() {\n                            // Ignore a failure to load the string. Just render with the default string.\n                            EventList.init(eventListContainer, COURSE_EVENT_LIMIT, {'1': pageDeferred.promise()});\n                        });\n                });\n\n                return eventsByCourse;\n            }).catch(Notification.exception);\n    };\n\n    /**\n     * Add event listeners to load more courses for the courses view.\n     *\n     * @param {object} root The root element for the course activities courses view.\n     */\n    var registerEventListeners = function(root) {\n        var courseActivitiesDaySelectorContainer = root.find(SELECTORS.COURSE_ACTIVITIES_DAY_FILTER);\n\n        CustomEvents.define(courseActivitiesDaySelectorContainer, [CustomEvents.events.activate]);\n        courseActivitiesDaySelectorContainer.on(\n            CustomEvents.events.activate,\n            SELECTORS.COURSE_ACTIVITIES_DAY_FILTER_OPTION,\n            function(e, data) {\n            alert(\"porrra\");\n            loadMoreCourses(root);\n\n            if (data) {\n                data.originalEvent.preventDefault();\n                data.originalEvent.stopPropagation();\n            }\n            e.stopPropagation();\n        });\n    };\n\n    /**\n     * Initialise the course activities courses view. Begin loading the events\n     * if this view is active. Add the relevant event listeners.\n     *\n     * This function should only be called once per page load because it\n     * is adding event listeners to the page.\n     *\n     * @param {object} root The root element for the course activities courses view.\n     */\n    var init = function(root) {\n        root = $(root);\n\n        setEventReloadTime(root, Date.now());\n\n        if (root.hasClass('active')) {\n            // Only load if this is active otherwise it will be lazy loaded later.\n            loadMoreCourses(root);\n            root.attr('data-seen', true);\n        }\n\n        registerEventListeners(root);\n    };\n\n    /**\n     * Reset the element back to it's initial state. Begin loading the events again\n     * if this view is active.\n     *\n     * @param {object} root The root element for the course activities courses view.\n     */\n    var reset = function(root) {\n        root.removeAttr('data-seen');\n        if (root.hasClass('active')) {\n            shown(root);\n        }\n    };\n\n    /**\n     * If this is the first time this view has been displayed then begin loading\n     * the events.\n     *\n     * @param {object} root The root element for the course activities courses view.\n     */\n\n    var shown = function(root) {\n        if (!root.attr('data-seen')) {\n            if (hasLoadedCourses(root)) {\n                // This isn't the first time this view is shown so just reload the\n                // events for the courses we've already loaded.\n                reloadCourseEvents(root);\n            } else {\n                // We haven't loaded any courses yet so do that now.\n                loadMoreCourses(root);\n            }\n\n            root.attr('data-seen', true);\n        }\n    };\n\n    return {\n        init: init,\n        reset: reset,\n        shown: shown\n    };\n});\n"],"file":"view_courses.min.js"}